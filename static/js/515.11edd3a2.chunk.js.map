{"version":3,"file":"static/js/515.11edd3a2.chunk.js","mappings":"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","sources":["webpack://movie-app-ts/./src/Components/MoviesTable/MoviesTable.module.scss?0e3b","Components/MoviesTable/MovieCard.tsx","Components/MoviesTable/MoviesTable.tsx","webpack://movie-app-ts/./src/Components/Pagination/Pagination.module.scss?c296","Components/Pagination/Pagination.tsx","webpack://movie-app-ts/./src/Components/Search/Search.module.scss?6984","Components/Search/Search.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"MoviesTable_grid__e8aaY\",\"card\":\"MoviesTable_card__50g0F\",\"overlay\":\"MoviesTable_overlay__ys3xJ\",\"rateCircle\":\"MoviesTable_rateCircle__N2d31\",\"good\":\"MoviesTable_good__PcW3V\",\"normal\":\"MoviesTable_normal__bIsQ0\",\"bad\":\"MoviesTable_bad__yXdkI\"};","import React from 'react';\r\nimport {FetchedItemType} from \"../../Types/Types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from './MoviesTable.module.scss'\r\n\r\nconst MovieCard:React.FC<FetchedItemType> = ({poster_path, title, overview, vote_average, id}) => {\r\n    return (\r\n        <Link to={`/movie-app-ts/search/${id}`} className={styles.card}>\r\n            <div className={styles.overlay}>\r\n                <h3>{title}</h3>\r\n                <p>{overview}</p>\r\n            </div>\r\n\r\n            <div className={styles.rateCircle + ' ' + (vote_average >= 8 ? styles.good : vote_average > 4 ? styles.normal : styles.bad)}>{vote_average}</div>\r\n\r\n            <img\r\n                src={poster_path?`https://image.tmdb.org/t/p/w200${poster_path}`:`https://ih1.redbubble.net/image.370389900.3139/flat,750x,075,f-pad,750x1000,f8f8f8.u4.jpg`}\r\n                alt={`${title} Poster`}\r\n            />\r\n\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport {FetchedItemType} from \"../../Types/Types\";\r\nimport styles from './MoviesTable.module.scss'\r\n\r\nconst MoviesTable:React.FC<{isLoading: boolean, movies: FetchedItemType[]}> = ({isLoading, movies}) => {\r\n    return (\r\n        <div className={styles.grid}>\r\n            {isLoading ? [...new Array(20)].map((v, i) => <Skeleton key={i} baseColor={\"#5d5c5c\"} highlightColor={\"#858585\"} height={300} width={200}/>) : movies.map((movie) => (\r\n                <MovieCard {...movie} key={movie.id} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviesTable;","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__TPTRw\",\"number\":\"Pagination_number__E3t0R\",\"activePage\":\"Pagination_activePage__HC1FN\"};","import React from 'react';\r\n\r\nimport styles from './Pagination.module.scss'\r\n\r\nconst Pagination:React.FC<{ total_pages: number, page: number, onClickHandler: any }> = ({total_pages, page, onClickHandler}) => {\r\n    let totalPages = Math.min(total_pages, 500)\r\n    let numbers = []\r\n\r\n    for (let i = 0; i < totalPages; i++) {\r\n        numbers.push(i+1)\r\n    }\r\n\r\n    if (page > 4){\r\n        numbers = numbers.splice(page - 4, 9)\r\n    } else if (page <= 4){\r\n        numbers = numbers.splice(0, 9)\r\n    } else {\r\n        numbers = numbers.splice(490, 9)\r\n    }\r\n\r\n    if (total_pages < 2){\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n            {page > 4 ? <><span onClick={() => onClickHandler(1)} className={styles.number + (page === 1 ? ' ' + styles.activePage : '')}>1</span><span className={styles.number}> ... </span></> : ''}\r\n            {numbers.map(num => <span onClick={() => onClickHandler(num)} key={num} className={styles.number + (page === num ? ' ' + styles.activePage : '')}>{num}</span>)}\r\n            {page < totalPages - 4 ? <><span className={styles.number}> ... </span><span onClick={() => onClickHandler(totalPages)} className={styles.number + (page === totalPages ? ' ' + styles.activePage : '')}>{totalPages}</span></> : ''}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"subheader\":\"Search_subheader__MNn45\",\"heading\":\"Search_heading__YJM51\",\"search\":\"Search_search__GRbjW\",\"pill\":\"Search_pill__Bx4MT\",\"title\":\"Search_title__7fTV5\",\"plug\":\"Search_plug__+5ciL\"};","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useAppDispatch} from \"../../redux/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {\r\n    currentSearchPageSelector,\r\n    fetchNowAired,\r\n    fetchSearched,\r\n    isLoadingSelector,\r\n    querySelector,\r\n    removeItems,\r\n    searchedSelector,\r\n    setCurrentPage,\r\n    setStateQuery,\r\n    totalSearchPagesSelector,\r\n    totalSearchResultsSelector\r\n} from \"../../redux/Slices/searchSlice\";\r\nimport debounce from 'lodash.debounce'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport MoviesTable from \"../MoviesTable/MoviesTable\";\r\nimport qs from \"qs\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport styles from './Search.module.scss'\r\n\r\nconst Search: React.FC = () => {\r\n\r\n    const [inputQuery, setInputQuery] = useState('')\r\n    const dispatch = useAppDispatch()\r\n    const totalPages = useSelector(totalSearchPagesSelector)\r\n    const currentPage = useSelector(currentSearchPageSelector)\r\n    const isLoading = useSelector(isLoadingSelector)\r\n    const movies = useSelector(searchedSelector)\r\n    const totalResults = useSelector(totalSearchResultsSelector)\r\n    const stateQuery = useSelector(querySelector)\r\n    const navigate = useNavigate();\r\n\r\n    const onInputChange = useCallback(debounce((str) => {\r\n        if (str) {\r\n            dispatch(setStateQuery(str))\r\n        } else {\r\n            dispatch(removeItems())\r\n        }\r\n    }, 1150), [])\r\n\r\n    useEffect(() => {\r\n        if (!stateQuery) {\r\n            navigate('')\r\n            dispatch(fetchNowAired())\r\n        } else {\r\n            const params = {\r\n                currentPage,\r\n                query: stateQuery\r\n            };\r\n            const queryString = qs.stringify(params, {skipNulls: true});\r\n            navigate(`?${queryString}`);\r\n\r\n\r\n            dispatch(fetchSearched({query: stateQuery, page: currentPage}))\r\n        }\r\n    }, [currentPage, stateQuery])\r\n\r\n    useEffect(() => {\r\n        if (window.location.search) {\r\n            const params = qs.parse(window.location.search.substring(1)) as unknown as { currentPage: number, query: string };\r\n            setInputQuery(params.query)\r\n            dispatch(setStateQuery(params.query));\r\n            dispatch(setCurrentPage(Number(params.currentPage)),);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.subheader}>\r\n                <h1 className={styles.heading}>Search</h1>\r\n                <div className={styles.search}>\r\n                    <input value={inputQuery} onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setInputQuery(e.target.value)\r\n                        onInputChange(e.target.value)\r\n                    }} type=\"text\"/>\r\n                    <span className={styles.pill}>\r\n                        {stateQuery ? `${totalResults} ${totalResults === 1 ? \"Movie\" : \"Movies\"}` : \"Search\"}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={styles.title}>\r\n                {!stateQuery ? \"Now Watching In Cinemas\" : `Results of searching`}\r\n            </div>\r\n            {movies.length === 0 && !isLoading ?\r\n                <div className={styles.plug}>It seems you entered an invalid value!</div> :\r\n                <MoviesTable isLoading={isLoading} movies={movies}/>}\r\n            {stateQuery && <Pagination page={currentPage} total_pages={totalPages}\r\n                                       onClickHandler={(num: number) => dispatch(setCurrentPage(num))}/>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Search;"],"names":["poster_path","title","overview","vote_average","id","to","className","styles","src","alt","isLoading","movies","Array","map","v","i","baseColor","highlightColor","height","width","movie","key","total_pages","page","onClickHandler","totalPages","Math","min","numbers","push","splice","onClick","num","useState","inputQuery","setInputQuery","dispatch","useAppDispatch","useSelector","totalSearchPagesSelector","currentPage","currentSearchPageSelector","isLoadingSelector","searchedSelector","totalResults","totalSearchResultsSelector","stateQuery","querySelector","navigate","useNavigate","onInputChange","useCallback","debounce","str","setStateQuery","removeItems","useEffect","params","query","queryString","qs","skipNulls","fetchSearched","fetchNowAired","window","location","search","substring","setCurrentPage","Number","value","onChange","e","target","type","length","MoviesTable","Pagination"],"sourceRoot":""}