{"version":3,"file":"static/js/557.c761b6cc.chunk.js","mappings":"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","sources":["Components/CategoryPages/Upcoming/UpcomingPage.tsx","webpack://movie-app-ts/./src/Components/MoviesTable/MoviesTable.module.scss?0e3b","Components/MoviesTable/MovieCard.tsx","Components/MoviesTable/MoviesTable.tsx","webpack://movie-app-ts/./src/Components/Pagination/Pagination.module.scss?c296","Components/Pagination/Pagination.tsx","webpack://movie-app-ts/./src/Components/CategoryPages/CategoryPages.module.scss?e315"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useAppDispatch} from \"../../../redux/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Pagination from \"../../Pagination/Pagination\";\r\nimport {\r\n    currentUpcomingPageSelector,\r\n    fetchUpcoming,\r\n    isLoadingUpcomingPageSelector,\r\n    setCurrentPage,\r\n    totalUpcomingSlicePagesSelector,\r\n    upcomingSelector\r\n} from \"../../../redux/Slices/upcomingSlice\";\r\nimport MoviesTable from \"../../MoviesTable/MoviesTable\";\r\nimport qs from 'qs';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport styles from '../CategoryPages.module.scss'\r\n\r\nconst UpcomingPage: React.FC = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch()\r\n    const movies = useSelector(upcomingSelector)\r\n    const totalPages = useSelector(totalUpcomingSlicePagesSelector)\r\n    const currentPage = useSelector(currentUpcomingPageSelector)\r\n    const isLoading = useSelector(isLoadingUpcomingPageSelector)\r\n    const isMounted = React.useRef(false);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            const params = {\r\n                currentPage,\r\n            };\r\n            const queryString = qs.stringify(params, {skipNulls: true});\r\n            navigate(`?${queryString}`);\r\n        }\r\n        dispatch(fetchUpcoming(currentPage))\r\n        isMounted.current = true;\r\n    }, [currentPage])\r\n\r\n    React.useEffect(() => {\r\n        if (window.location.search) {\r\n            const params = qs.parse(window.location.search.substring(1));\r\n            dispatch(\r\n                setCurrentPage(Number(params.currentPage)),\r\n            );\r\n        }\r\n        isMounted.current = true;\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.subheader}>\r\n                <h1 className={styles.heading}>Upcoming movies</h1>\r\n            </div>\r\n            <MoviesTable isLoading={isLoading} movies={movies}/>\r\n            <Pagination page={currentPage} total_pages={totalPages}\r\n                        onClickHandler={(num: number) => dispatch(setCurrentPage(num))}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UpcomingPage;","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"MoviesTable_grid__e8aaY\",\"card\":\"MoviesTable_card__50g0F\",\"overlay\":\"MoviesTable_overlay__ys3xJ\",\"rateCircle\":\"MoviesTable_rateCircle__N2d31\",\"good\":\"MoviesTable_good__PcW3V\",\"normal\":\"MoviesTable_normal__bIsQ0\",\"bad\":\"MoviesTable_bad__yXdkI\"};","import React from 'react';\r\nimport {FetchedItemType} from \"../../Types/Types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from './MoviesTable.module.scss'\r\n\r\nconst MovieCard:React.FC<FetchedItemType> = ({poster_path, title, overview, vote_average, id}) => {\r\n    return (\r\n        <Link to={`/movie-app-ts/search/${id}`} className={styles.card}>\r\n            <div className={styles.overlay}>\r\n                <h3>{title}</h3>\r\n                <p>{overview}</p>\r\n            </div>\r\n\r\n            <div className={styles.rateCircle + ' ' + (vote_average >= 8 ? styles.good : vote_average > 4 ? styles.normal : styles.bad)}>{vote_average}</div>\r\n\r\n            <img\r\n                src={poster_path?`https://image.tmdb.org/t/p/w200${poster_path}`:`https://ih1.redbubble.net/image.370389900.3139/flat,750x,075,f-pad,750x1000,f8f8f8.u4.jpg`}\r\n                alt={`${title} Poster`}\r\n            />\r\n\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport {FetchedItemType} from \"../../Types/Types\";\r\nimport styles from './MoviesTable.module.scss'\r\n\r\nconst MoviesTable:React.FC<{isLoading: boolean, movies: FetchedItemType[]}> = ({isLoading, movies}) => {\r\n    return (\r\n        <div className={styles.grid}>\r\n            {isLoading ? [...new Array(20)].map((v, i) => <Skeleton key={i} baseColor={\"#5d5c5c\"} highlightColor={\"#858585\"} height={300} width={200}/>) : movies.map((movie) => (\r\n                <MovieCard {...movie} key={movie.id} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviesTable;","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__TPTRw\",\"number\":\"Pagination_number__E3t0R\",\"activePage\":\"Pagination_activePage__HC1FN\"};","import React from 'react';\r\n\r\nimport styles from './Pagination.module.scss'\r\n\r\nconst Pagination:React.FC<{ total_pages: number, page: number, onClickHandler: any }> = ({total_pages, page, onClickHandler}) => {\r\n    let totalPages = Math.min(total_pages, 500)\r\n    let numbers = []\r\n\r\n    for (let i = 0; i < totalPages; i++) {\r\n        numbers.push(i+1)\r\n    }\r\n\r\n    if (page > 4){\r\n        numbers = numbers.splice(page - 4, 9)\r\n    } else if (page <= 4){\r\n        numbers = numbers.splice(0, 9)\r\n    } else {\r\n        numbers = numbers.splice(490, 9)\r\n    }\r\n\r\n    if (total_pages < 2){\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n            {page > 4 ? <><span onClick={() => onClickHandler(1)} className={styles.number + (page === 1 ? ' ' + styles.activePage : '')}>1</span><span className={styles.number}> ... </span></> : ''}\r\n            {numbers.map(num => <span onClick={() => onClickHandler(num)} key={num} className={styles.number + (page === num ? ' ' + styles.activePage : '')}>{num}</span>)}\r\n            {page < totalPages - 4 ? <><span className={styles.number}> ... </span><span onClick={() => onClickHandler(totalPages)} className={styles.number + (page === totalPages ? ' ' + styles.activePage : '')}>{totalPages}</span></> : ''}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"subheader\":\"CategoryPages_subheader__sWC-p\",\"heading\":\"CategoryPages_heading__fmVaL\"};"],"names":["navigate","useNavigate","dispatch","useAppDispatch","movies","useSelector","upcomingSelector","totalPages","totalUpcomingSlicePagesSelector","currentPage","currentUpcomingPageSelector","isLoading","isLoadingUpcomingPageSelector","isMounted","React","useEffect","current","params","queryString","qs","skipNulls","fetchUpcoming","window","location","search","substring","setCurrentPage","Number","className","styles","page","total_pages","onClickHandler","num","poster_path","title","overview","vote_average","id","to","src","alt","Array","map","v","i","baseColor","highlightColor","height","width","movie","key","Math","min","numbers","push","splice","onClick"],"sourceRoot":""}